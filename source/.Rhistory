ggplot(predictions, aes(prediction))+
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
# prevent right label on axis from being clipped
theme(legend.pos='top',plot.margin=margin(r = 20, unit = "pt")  ) +
scale_fill_manual(values=wes_palette('Moonrise3')) +
scale_x_continuous(labels=scales::percent,
limits=c(0,1),
expand=c(0,0)) + # eliminate left/right margin
scale_y_continuous(expand=c(0,0,3,0)) +
labs(title="Logistic Regression Probability Distribution") +
xlab('Survival Probability') +
ylab('Count') +
guides(fill = guide_legend(title=''))
ggplot(predictions, aes(prediction))+
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
# prevent right label on axis from being clipped
theme(legend.pos='top',plot.margin=margin(r = 20, unit = "pt")  ) +
scale_fill_manual(values=wes_palette('Moonrise3')) +
scale_x_continuous(labels=scales::percent,
limits=c(0,1),
expand=c(0,0,0,0)) + # eliminate left/right margin
scale_y_continuous(expand=c(0,0,3,0)) +
labs(title="Logistic Regression Probability Distribution") +
xlab('Survival Probability') +
ylab('Count') +
guides(fill = guide_legend(title=''))
ggplot(predictions, aes(prediction))+
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
# prevent right label on axis from being clipped
#theme(legend.pos='top',plot.margin=margin(r = 20, unit = "pt")  ) +
scale_fill_manual(values=wes_palette('Moonrise3')) +
scale_x_continuous(labels=scales::percent,
limits=c(0,1),
expand=c(0,0,0,0)) + # eliminate left/right margin
scale_y_continuous(expand=c(0,0,3,0)) +
labs(title="Logistic Regression Probability Distribution") +
xlab('Survival Probability') +
ylab('Count') +
guides(fill = guide_legend(title=''))
ggplot(predictions, aes(prediction))+
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
# prevent right label on axis from being clipped
theme(legend.pos='top',plot.margin=margin(r = 20, unit = "pt")  ) +
scale_fill_manual(values=wes_palette('Moonrise3')) +
scale_x_continuous(labels=scales::percent,
limits=c(0,1),
expand=c(0,0,0,0)) + # eliminate left/right margin
scale_y_continuous(expand=c(0,0,3,0)) +
labs(title="Logistic Regression Probability Distribution") +
xlab('Survival Probability') +
ylab('Count') +
guides(fill = guide_legend(title=''))
ggplot(predictions, aes(prediction))+
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
# prevent right label on axis from being clipped
theme(legend.pos='top') +
scale_fill_manual(values=wes_palette('Moonrise3')) +
scale_x_continuous(labels=scales::percent,
limits=c(0,1),
expand=c(0,0,0,0)) + # eliminate left/right margin
scale_y_continuous(expand=c(0,0,3,0)) +
labs(title="Logistic Regression Probability Distribution") +
xlab('Survival Probability') +
ylab('Count') +
guides(fill = guide_legend(title=''))
ggplot(predictions, aes(prediction))+
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
# prevent right label on axis from being clipped
theme(legend.pos='top',plot.margin=margin(r = 20, unit = "pt")  ) +
scale_fill_manual(values=wes_palette('Moonrise3')) +
scale_x_continuous(labels=scales::percent,
limits=c(0,1),
expand=c(0,0,0,0)) + # eliminate left/right margin
scale_y_continuous(expand_scale(mult = c(0, .2))) +
labs(title="Logistic Regression Probability Distribution") +
xlab('Survival Probability') +
ylab('Count') +
guides(fill = guide_legend(title=''))
ggplot(predictions, aes(prediction))+
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
# prevent right label on axis from being clipped
theme(legend.pos='top',plot.margin=margin(r = 20, unit = "pt")  ) +
scale_fill_manual(values=wes_palette('Moonrise3')) +
scale_x_continuous(labels=scales::percent,
limits=c(0,1),
expand=c(0,0,0,0)) + # eliminate left/right margin
scale_y_continuous(expand=expand_scale(mult = c(0, .2))) +
labs(title="Logistic Regression Probability Distribution") +
xlab('Survival Probability') +
ylab('Count') +
guides(fill = guide_legend(title=''))
install.packages('ggplot2')
install.packages("ggplot2")
library(PASWR) #titanic3 dataset
library(MASS) # confint for glm
library(wesanderson) # color palettes
library(formattable) # percent format
library(caret) # regression utilities
#library(Hmisc) # capitalize function
library(broom) # model display capabilities
#library(xtable) # pretty table
library(knitr)
library(kableExtra)
library(tidyverse)
library(skimr) #summary stats
#library(rms)
titanic <- titanic3 %>% as_tibble() %>%
mutate(sex=str_to_title(sex))
titanic_summ <- titanic %>%
count(survived,pclass,sex) %>%
group_by(pclass,sex) %>%
mutate(perc_surv_num=n/sum(n),
perc_surv_char=as.character(percent(n/sum(n),0))) %>%
ungroup() %>%
mutate(survived=factor(survived,labels=c('Died','Survived')))
# Set default ggplot theme
theme_set(theme_bw()+
theme(legend.position = "top",
plot.subtitle= element_text(face="bold",hjust=0.5),
plot.title = element_text(lineheight=1, face="bold",hjust = 0.5)))
library(mice)
# Use mice to impute data - takes a few seconds on my laptop
# Increasing maxit from the default gives better results
# Making sure to not sure the outcome variable to impute.
titanic_imputed <- mice(titanic %>% select(sex,pclass,age), method = 'pmm', maxit=80,seed = 3530,printFlag=F)
#imp_with <- with(titanic_imputed, lm(age ~ pclass + sex + fare))
#pooled <- pool(imp_with)
# check the fit
#summary(pooled)
# Add imputed Data
titanic_imp <- complete(titanic_imputed,5) %>%
bind_cols(titanic %>% select(survived,age,fare) %>% rename(age_orig=age)) %>%
mutate(imputed=case_when(is.na(age_orig) ~ 'Imputed', TRUE ~ 'Original'))
# Plot
ggplot(data=titanic_imp) +
geom_density(aes(x=age,color=imputed), alpha=0.8) +
#facet_grid(vars(sex),vars(pclass)) +
theme(legend.position='top') +
labs(title="Distributions of Original v. Imputed Age") +
guides(color=guide_legend(title=''))
ggplot(data=titanic_imp) +
geom_density(aes(x=age,color=imputed), alpha=0.8) +
facet_grid(sex ~ pclass) +
theme(legend.position='top') +
labs(title="Distributions of Original v. Imputed Age") +
guides(color=guide_legend(title=''))
log_fit <- glm(survived ~ sex + pclass + age ,family=binomial(link="logit"),data=titanic_imp)
predictions <- titanic_imp %>%
select(sex,pclass,age,survived) %>%
mutate(prediction=predict(log_fit,newdata=titanic_imp,type='response')) %>%
mutate(prediction_binary=case_when(prediction >0.5 ~ 1, TRUE ~ 0),
brier_score=abs(prediction-survived))
#summary(fit)
log_confint <- confint(log_fit) %>% tidy()
colnames(log_confint) <- c('Term','LCLM','UCLM')
log_info <- glance(log_fit) %>%
mutate(meanBrierScore=mean(predictions$brier_score,na.rm=T)) %>%
dplyr::select(meanBrierScore,everything())
log_terms <- tidy(log_fit) %>% rename(Coefficient=estimate,Term=term) %>%
# Order by largest coefficient but put intercept term on bottom
left_join(log_confint,by='Term') %>%
mutate(OR=exp(Coefficient),LCLM_OR=exp(LCLM),UCLM_OR=exp(UCLM)) %>%
select(Term,Coefficient,LCLM,UCLM,OR,LCLM_OR,UCLM_OR,everything()) %>%
arrange(Term=='(Intercept)',desc(abs(Coefficient)))
# An analysis of our model's classification accuracy
confusionMatrix(factor(predictions$prediction_binary), factor(predictions$survived))
ggplot(data=predictions,
aes(x = age, y = prediction, color = pclass)) +
geom_point() +
facet_grid(~sex) +
scale_y_continuous(labels=scales::percent) +
theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Probability of Survival - Logistic Regression') +
xlab('Age') +
ylab('Survival Probability') +
guides(color = guide_legend(title='Passenger Class',reverse=F,override.aes = list(size=2.5)))
ggplot(predictions, aes(prediction))+
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
# prevent right label on axis from being clipped
theme(legend.pos='top',plot.margin=margin(r = 20, unit = "pt")  ) +
scale_fill_manual(values=wes_palette('Moonrise3')) +
scale_x_continuous(labels=scales::percent,
limits=c(0,1),
expand=c(0,0,0,0)) + # eliminate left/right margin
scale_y_continuous(expand=expand_scale(mult = c(0, .2))) +
labs(title="Logistic Regression Probability Distribution") +
xlab('Survival Probability') +
ylab('Count') +
guides(fill = guide_legend(title=''))
# Same graph as prior but faceted on class
ggplot(predictions, aes(prediction))+
geom_histogram(binwidth=0.05,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
facet_wrap(~sex,scales='free_y') +
theme(legend.pos='top',
# prevent right label on axis from being clipped
plot.margin=margin(r = 20, unit = "pt")
) +
scale_fill_manual(values=wes_palette('Moonrise3')) +
scale_x_continuous(labels=scales::percent ) +
scale_y_continuous(expand=c(0,0,0.07,0)) + # 7% margin on top, none on bottom
labs(title="Logistic Regression Probability Distribution by Gender") +
xlab('Survival Probability') +
ylab('Count') +
guides(fill = guide_legend(title=''))
ggplot(predictions, aes(brier_score)) +
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
labs(title="Brier Score Distribution") +
scale_fill_manual(values=wes_palette('Moonrise3')) +
# Use expand to make sure right axis label isn't clipped
scale_x_continuous(expand=c(0,0,0.01,0),limits=c(0,1)) +
scale_y_continuous(expand=c(0,0,0.07,0)) + # 7% margin on top
xlab('Brier Score') +
ylab('Count') +
guides(fill = guide_legend(title=''))
log_fit <- glm(survived ~ sex + pclass + age ,family=binomial(link="logit"),data=titanic_imp)
predictions <- titanic_imp %>%
select(sex,pclass,age,survived) %>%
mutate(prediction=predict(log_fit,newdata=titanic_imp,type='response')) %>%
mutate(prediction_binary=case_when(prediction >0.5 ~ 1, TRUE ~ 0),
brier_score=abs(prediction-survived))
#summary(fit)
log_confint <- confint(log_fit) %>% tidy()
colnames(log_confint) <- c('Term','LCLM','UCLM')
log_info <- glance(log_fit) %>%
mutate(meanBrierScore=mean(predictions$brier_score,na.rm=T)) %>%
dplyr::select(meanBrierScore,everything())
log_terms <- tidy(log_fit) %>% rename(Coefficient=estimate,Term=term) %>%
# Order by largest coefficient but put intercept term on bottom
left_join(log_confint,by='Term') %>%
mutate(OR=exp(Coefficient),LCLM_OR=exp(LCLM),UCLM_OR=exp(UCLM)) %>%
select(Term,Coefficient,LCLM,UCLM,OR,LCLM_OR,UCLM_OR,everything()) %>%
arrange(Term=='(Intercept)',desc(abs(Coefficient)))
# An analysis of our model's classification accuracy
confusionMatrix(factor(predictions$prediction_binary), factor(predictions$survived))
ggplot(data=predictions,
aes(x = age, y = prediction, color = pclass)) +
geom_point() +
facet_grid(~sex) +
scale_y_continuous(labels=scales::percent) +
theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Probability of Survival - Logistic Regression') +
xlab('Age') +
ylab('Survival Probability') +
guides(color = guide_legend(title='Passenger Class',reverse=F,override.aes = list(size=2.5)))
ggplot(predictions, aes(prediction))+
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
# prevent right label on axis from being clipped
theme(legend.pos='top',plot.margin=margin(r = 20, unit = "pt")  ) +
scale_fill_manual(values=wes_palette('Moonrise3')) +
scale_x_continuous(labels=scales::percent,
limits=c(0,1),
expand=c(0,0,0,0)) + # eliminate left/right margin
scale_y_continuous(expand=expand_scale(mult = c(0, .1))) +
labs(title="Logistic Regression Probability Distribution") +
xlab('Survival Probability') +
ylab('Count') +
guides(fill = guide_legend(title=''))
# Same graph as prior but faceted on class
ggplot(predictions, aes(prediction))+
geom_histogram(binwidth=0.05,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
facet_wrap(~sex,scales='free_y') +
theme(legend.pos='top',
# prevent right label on axis from being clipped
plot.margin=margin(r = 20, unit = "pt")
) +
scale_fill_manual(values=wes_palette('Moonrise3')) +
scale_x_continuous(labels=scales::percent ) +
scale_y_continuous(expand=expand_scale(mult = c(0, .1)))
labs(title="Logistic Regression Probability Distribution by Gender") +
xlab('Survival Probability') +
ylab('Count') +
guides(fill = guide_legend(title=''))
labs(title="Logistic Regression Probability Distribution by Gender") +
xlab('Survival Probability') +
ylab('Count') +
guides(fill = guide_legend(title=''))
ggplot(predictions, aes(prediction))+
geom_histogram(binwidth=0.05,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
facet_wrap(~sex,scales='free_y') +
theme(legend.pos='top',
# prevent right label on axis from being clipped
plot.margin=margin(r = 20, unit = "pt")
) +
scale_fill_manual(values=wes_palette('Moonrise3')) +
scale_x_continuous(labels=scales::percent ) +
scale_y_continuous(expand=expand_scale(mult = c(0, .1))) +
labs(title="Logistic Regression Probability Distribution by Gender") +
xlab('Survival Probability') +
ylab('Count') +
guides(fill = guide_legend(title=''))
ggplot(predictions, aes(brier_score)) +
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
labs(title="Brier Score Distribution") +
scale_fill_manual(values=wes_palette('Moonrise3')) +
# Use expand to make sure right axis label isn't clipped
scale_x_continuous(expand=c(0,0,0.01,0),limits=c(0,1)) +
scale_y_continuous(expand=expand_scale(mult = c(0, .1)))
ggplot(predictions, aes(brier_score)) +
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
labs(title="Brier Score Distribution") +
scale_fill_manual(values=wes_palette('Moonrise3')) +
# Use expand to make sure right axis label isn't clipped
scale_x_continuous(expand=c(0,0,0.01,0),limits=c(0,1)) +
scale_y_continuous(expand=expand_scale(mult = c(0, .1))) +
xlab('Brier Score') +
ylab('Count') +
guides(fill = guide_legend(title=''))
kable(log_info %>%
select(-df.residual,-df.null,-deviance),format='markdown',digits=2) %>%
kable_styling(bootstrap_options = c("striped",'border'))
kable(log_terms,format='markdown',digits = 2) %>%
kable_styling(bootstrap_options = c("striped",'border'))
lm_fit <- lm(fare ~ sex + pclass + age + survived,data=titanic_imp)
# Calculate confidence limit
lm_confint <- confint(lm_fit) %>% tidy()
colnames(lm_confint) <- c('Term','LCLM','UCLM')
lm_predictions <- titanic_imp %>%
select(sex,pclass,age,survived,fare) %>%
mutate(prediction=predict(lm_fit,newdata=titanic_imp)) %>%
mutate(residual=fare-prediction)
lm_info <- glance(lm_fit)
lm_terms <- tidy(lm_fit) %>%
rename(Term=term,Coefficient=estimate) %>%
left_join(lm_confint,by='Term' ) %>%
select(Term,Coefficient,LCLM,UCLM,everything()) %>%
arrange(Term=='(Intercept)',desc(abs(Coefficient)))
#summary(lm_fit)
# Histogram of Residuals
ggplot(lm_predictions, aes(residual)) +
geom_histogram(bins=30) +
facet_grid(~pclass,scales='free_x') +
geom_vline(xintercept=0,color='red',size=0.4) +
scale_x_continuous(labels=scales::dollar ,expand=c(0,0,0,0)
) +
scale_y_continuous(expand=c(0,0,0.07,0)) +
labs(title="Residual Distribution by Passenger Class") +
xlab('Residual') +
ylab('Count')
ggplot(data=lm_predictions,
aes(x = age, y = prediction, color = pclass,group=1)) +
geom_point() +
facet_grid(~factor(sex)) +
scale_y_continuous(labels=scales::dollar) +
#theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Cost of Fare - Linear Regression') +
xlab('Age') +
ylab('Fare Cost') +
guides(color = guide_legend(title='Passenger Class',reverse=F,override.aes = list(size=2.5)))
ggplot(data=lm_predictions,
aes(x = prediction, y = residual, color = sex)) +
geom_point() +
facet_grid(~pclass,scales='free_x') +
geom_hline(yintercept=0) + # horizontal line at 0 residual
#geom_smooth(method="lm",show.legend=F,size=0.5) +
scale_x_continuous(labels=scales::dollar) +
scale_y_continuous(labels=scales::dollar) +
#theme(legend.pos='none') +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Residuals vs Predictions by Passenger Class') +
xlab('Prediction') +
ylab('Residual') +
guides(color = guide_legend(title='Gender',reverse=F,override.aes = list(size=2.5)))
ggplot(data=lm_predictions,
aes(x = age, y = residual, color = sex)) +
geom_point() +
facet_grid(~pclass) +
geom_hline(yintercept=0) + # horizontal line at 0 residual
scale_y_continuous(labels=scales::dollar) +
theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Residuals By Passenger Class') +
xlab('Age') +
ylab('Residual') +
guides(color = guide_legend(title='Gender',reverse=F,override.aes = list(size=2.5)))
ggplot(data=lm_terms,
aes(x = reorder(Term,-Coefficient), y = Coefficient)) +
geom_point() +
coord_flip() +
geom_pointrange(mapping=aes(ymin=LCLM, ymax=UCLM)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Linear Model Coefficients with Confidence Intervals') +
xlab('Term')
kable((lm_info %>% dplyr::select(-df.residual,-logLik,-deviance)),format='markdown',digits = 2) %>%
kable_styling(bootstrap_options = c("striped",'border'))
kable(lm_terms,format='markdown',digits = c(1,1,1,1,2,2,2)) %>%
kable_styling(bootstrap_options = c("striped",'border'))
help(kable)
detach("package:knitr", unload=TRUE)
library(knitr)  # put this last so it overwrites skimr's kable function
kable(log_info %>%
select(-df.residual,-df.null,-deviance),format='markdown',digits=2) %>%
kable_styling(bootstrap_options = c("striped",'border'))
kable(log_terms,format='markdown',digits = 2) %>%
kable_styling(bootstrap_options = c("striped",'border'))
kable((lm_info %>% dplyr::select(-df.residual,-logLik,-deviance)),format='markdown',digits = 2) %>%
kable_styling(bootstrap_options = c("striped",'border'))
kable(lm_terms,format='markdown',digits = c(1,1,1,1,2,2,2)) %>%
kable_styling(bootstrap_options = c("striped",'border'))
```{r,results='asis',warning=F,message=F}
kable(lm_terms,format='markdown',digits = c(1,1,1,1,2,2,2)) %>%
kable_styling(bootstrap_options = c("striped",'border'))
kable((lm_info %>% dplyr::select(-df.residual,-logLik,-deviance)),format='markdown',digits = 2) %>%
kable_styling(bootstrap_options = c("striped",'border'))
kable(lm_terms,format='markdown',digits = c(1,1,1,1,2,2,2)) %>%
kable_styling(bootstrap_options = c("striped",'border'))
```{r,results='asis',warning=F}
kable((lm_info %>% dplyr::select(-df.residual,-logLik,-deviance)),format='markdown',digits = 2) %>%
kable_styling(bootstrap_options = c("striped",'border'))
kable(lm_terms,format='markdown',digits = c(1,1,1,1,2,2,2)) %>%
kable_styling(bootstrap_options = c("striped",'border'))
kable((lm_info %>% dplyr::select(-df.residual,-logLik,-deviance)),format='markdown',digits = 2) %>%
kable_styling(bootstrap_options = c("striped",'border'))
kable(lm_terms,format='markdown',digits = c(1,1,1,1,2,2,2)) %>%
kable_styling(bootstrap_options = c("striped",'border'))
library(PASWR) #titanic3 dataset
library(MASS) # confint for glm
library(wesanderson) # color palettes
library(formattable) # percent format
library(caret) # regression utilities
#library(Hmisc) # capitalize function
library(broom) # model display capabilities
#library(xtable) # pretty table
library(kableExtra)
library(tidyverse)
library(skimr) #summary stats
library(knitr)
#library(rms)
titanic <- titanic3 %>% as_tibble() %>%
mutate(sex=str_to_title(sex))
titanic_summ <- titanic %>%
count(survived,pclass,sex) %>%
group_by(pclass,sex) %>%
mutate(perc_surv_num=n/sum(n),
perc_surv_char=as.character(percent(n/sum(n),0))) %>%
ungroup() %>%
mutate(survived=factor(survived,labels=c('Died','Survived')))
# Set default ggplot theme
theme_set(theme_bw()+
theme(legend.position = "top",
plot.subtitle= element_text(face="bold",hjust=0.5),
plot.title = element_text(lineheight=1, face="bold",hjust = 0.5)))
# Output summary stats to console
titanic %>% skim() %>% skimr::kable()
# Output summary stats to console
titanic %>% skim() %>% skimr::kable()
# Output summary stats to console
skim(titanic) %>% skimr::kable()
skim(titanic) %>% skimr::kable()
skim_with_defaults()
skim(titanic) %>% skimr::kable()
skim(titanic %>% select(survived,sex,pclass,age,fare)) %>% skimr::kable()
```{r summstats, results='asis'}
skim(titanic %>% select(survived,sex,pclass,age,fare)) %>% skimr::kable()
skim(titanic %>% select(survived,sex,pclass,age,fare)) %>% as_tibble() %>%
skim(titanic %>% select(survived,sex,pclass,age,fare)) %>% as_tibble() %>% kable()
skim(titanic %>% select(survived,sex,pclass,age,fare)) %>% as_tibble() %>% kable()
skim_to_wider(titanic %>% select(survived,sex,pclass,age,fare)) %>% as_tibble() %>% kable()
skim_to_wide(titanic %>% select(survived,sex,pclass,age,fare)) %>% as_tibble() %>% kable()
skim_to_wide(titanic %>% select(survived,sex,pclass,age,fare)) %>% kable()
help(skim_to_wide)
skim_to_wide(titanic %>% select(survived,sex,pclass,age,fare)) %>%
select(-top_counts,-ordered,-hist,-complete) %>%
%>% kable()
skim_to_wide(titanic %>% select(survived,sex,pclass,age,fare)) %>%
select(-top_counts,-ordered,-hist,-complete) %>%
kable()
skim_to_wide(titanic %>% select(survived,sex,pclass,age,fare)) %>%
select(-top_counts,-ordered,-hist,-complete,-empty) %>%
kable()
skim_to_wide(titanic %>% select(survived,sex,pclass,age,fare)) %>%
select(-top_counts,-ordered,-hist,-complete,-empty) %>%
skimr::kable()
skim_to_wide(titanic %>% select(survived,sex,pclass,age,fare)) %>%
select(-top_counts,-ordered,-hist,-complete,-empty) %>%
group_by(type) %>%
skimr::kable()
skim_to_wide(titanic %>% select(survived,sex,pclass,age,fare)) %>%
select(-top_counts,-ordered,-hist,-complete,-empty) %>%
skimr::kable()
skim_to_wide(titanic %>% select(survived,sex,pclass,age,fare)) %>%
select(-top_counts,-ordered,-hist,-complete,-empty) %>%
skimr::kable()
skim_to_wide(titanic %>% select(survived,sex,pclass,age,fare)) %>%
select(-top_counts,-ordered,-hist,-complete,-empty) %>%
skimr::kable()
skim_to_wide(titanic %>% select(survived,sex,pclass,age,fare)) %>%
select(-top_counts,-ordered,-hist,-complete,-empty) %>%
skimr::kable()
skim_to_wide(titanic %>% select(survived,sex,pclass,age,fare)) %>%
select(-top_counts,-ordered,-n_unique,-hist,-complete,-empty) %>%
skimr::kable()
skim_to_wide(titanic %>% select(survived,sex,pclass,age,fare)) %>%
select(-top_counts,-ordered,-n_unique,-hist,-complete,-empty) %>%
kable()
