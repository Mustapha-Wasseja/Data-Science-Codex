library(PASWR) #titanic3 dataset
library(MASS) # confint for glm
library(wesanderson) # color palettes
library(formattable) # percent format
library(caret) # regression utilities
library(Hmisc) # capitalize function
library(broom) # model display capabilities
#library(xtable) # pretty table
library(knitr)
library(kableExtra)
install.packages('kableExtra')
install.packages('mice')
library(PASWR) #titanic3 dataset
library(MASS) # confint for glm
library(wesanderson) # color palettes
library(formattable) # percent format
library(caret) # regression utilities
library(Hmisc) # capitalize function
library(broom) # model display capabilities
#library(xtable) # pretty table
library(knitr)
library(kableExtra)
library(tidyverse)
library(rms)
library(PASWR) #titanic3 dataset
library(MASS) # confint for glm
library(wesanderson) # color palettes
library(formattable) # percent format
library(caret) # regression utilities
library(Hmisc) # capitalize function
library(broom) # model display capabilities
#library(xtable) # pretty table
library(knitr)
library(kableExtra)
library(tidyverse)
#library(rms)
titanic <- titanic3 %>% as_tibble()
titanic_summ <- titanic %>%
count(survived,pclass,sex) %>%
mutate(sex=capitalize(as.character(sex))) %>%
group_by(pclass,sex) %>%
mutate(perc_surv_num=n/sum(n),
perc_surv_char=as.character(percent(n/sum(n),0))) %>%
ungroup() %>%
mutate(survived=factor(survived,labels=c('Died','Survived')))
# Set default ggplot theme
theme_set(theme_bw()+
theme(legend.position = "top",
plot.subtitle= element_text(face="bold",hjust=0.5),
plot.title = element_text(lineheight=1, face="bold",hjust = 0.5)))
titanic_summ_dot <- titanic_summ %>%
filter(survived=="Survived") %>%
mutate(group=str_c(sex,'-',pclass))
# Analyze where age is missing
titanic_miss <- titanic %>% select(pclass,sex,age,survived) %>%
mutate(sex=capitalize(as.character(sex)),missing_age=is.na(age)) %>%
group_by(pclass,sex) %>%
dplyr::summarize(perc_missing=mean(missing_age)) %>%
mutate(group=str_c(sex,'-',pclass))
ggplot(titanic_summ_dot, aes(x=reorder(group,-perc_surv_num), y=perc_surv_num)) +
geom_point(size=3,color='black') +   # Draw points
theme(legend.position='none',
panel.grid=element_blank()) +
scale_y_continuous(expand=c(0,0,0.015,0),labels=scales::percent) +
geom_segment(aes(x=group,
xend=group,
y=min(0),
yend=max(1)),
linetype="dashed", color='black',
size=0.1) +   # Draw dashed lines
labs(title="Titanic Passenger Survival Rates") +
coord_flip() +
xlab('Group') +
ylab('Survival Rate')
ggplot(data=titanic_summ,
aes(x = fct_rev(pclass), y=perc_surv_num,fill = survived)) +
facet_grid(~factor(sex)) +
geom_bar(stat='identity',color='black') +
coord_flip() +
geom_text(data=titanic_summ,aes(label = ifelse(perc_surv_num > 0.07 ,perc_surv_char,NA)),
size = 3,position = position_stack(vjust = 0.5)) +
scale_fill_manual(values=wes_palette('FantasticFox1')[c(3,4)]) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.grid = element_blank())+
labs(title='Passenger Survival Rates by Gender and Class') +
xlab('Passenger Class') +
ylab('') +
guides(fill = guide_legend(title='',reverse=T)) # reverse legend order
ggplot(titanic_miss, aes(x=reorder(group,-perc_missing), y=perc_missing)) +
geom_point(size=3,color='black') +   # Draw points
theme(legend.position='none',
panel.grid=element_blank()) +
scale_y_continuous(labels=scales::percent) +
geom_segment(aes(x=group,
xend=group,
y=min(perc_missing),
yend=max(perc_missing)),
linetype="dashed", color='black',
size=0.1) +   # Draw dashed lines
labs(title="Which Passengers Have Missing Age") +
coord_flip() +
xlab('Group') +
ylab('Percent Missing Age')
library(mice)
# Use mice to impute data - takes a few seconds on my laptop
titanic_imputed <- mice(titanic %>% select(pclass,age,sex), m=10, maxit = 50, method = 'pmm', seed = 3530,printFlag=F)
imp_with <- with(titanic_imputed, lm(age ~ pclass + sex))
pooled <- pool(imp_with)
# check the fit
summary(pooled)
# Add imputed Data
titanic_imp <- complete(titanic_imputed,10) %>%
bind_cols(titanic %>% select(age,survived) %>% rename(age_orig=age)) %>%
mutate(imputed=case_when(is.na(age_orig) ~ 'Imputed', TRUE ~ 'Original'))
# Plot
ggplot(data=titanic_imp) +
geom_density(aes(x=age,color=imputed), alpha=0.8) +
#facet_grid(vars(sex),vars(pclass)) +
theme(legend.position='top') +
labs(title="Distributions of Original v. Imputed Age") +
guides(color=guide_legend(title=''))
ggplot(data=titanic_imp) +
geom_density(aes(x=age,color=imputed), alpha=0.8) +
facet_grid(vars(sex),vars(pclass)) +
theme(legend.position='top') +
labs(title="Distributions of Original v. Imputed Age") +
guides(color=guide_legend(title=''))
ggplot(data=titanic_imp) +
geom_density(aes(x=age,color=imputed), alpha=0.8) +
facet_grid(vars(sex),vars(pclass)) +
theme(legend.position='top') +
labs(title="Distributions of Original v. Imputed Age") +
guides(color=guide_legend(title=''))
help(facet_grid)
"facet_grid"
ggplot(data=titanic_imp) +
geom_density(aes(x=age,color=imputed), alpha=0.8) +
facet_grid(sex ~ pclass)) +
ggplot(data=titanic_imp) +
geom_density(aes(x=age,color=imputed), alpha=0.8) +
facet_grid(sex,pclass)) +
ggplot(data=titanic_imp) +
geom_density(aes(x=age,color=imputed), alpha=0.8) +
facet_grid(sex,pclass) +
theme(legend.position='top') +
labs(title="Distributions of Original v. Imputed Age") +
guides(color=guide_legend(title=''))
ggplot(data=titanic_imp) +
geom_density(aes(x=age,color=imputed), alpha=0.8) +
facet_grid(~sex,~pclass) +
theme(legend.position='top') +
labs(title="Distributions of Original v. Imputed Age") +
guides(color=guide_legend(title=''))
ggplot(data=titanic_imp) +
geom_density(aes(x=age,color=imputed), alpha=0.8) +
facet_grid(~sex,pclass) +
theme(legend.position='top') +
labs(title="Distributions of Original v. Imputed Age") +
guides(color=guide_legend(title=''))
ggplot(data=titanic_imp) +
geom_density(aes(x=age,color=imputed), alpha=0.8) +
facet_grid(rows=vars(sex),cols=vars(pclass)) +
theme(legend.position='top') +
labs(title="Distributions of Original v. Imputed Age") +
guides(color=guide_legend(title=''))
ggplot(data=titanic_imp) +
geom_density(aes(x=age,color=imputed), alpha=0.8) +
facet_grid(sex ~ pclass) +
theme(legend.position='top') +
labs(title="Distributions of Original v. Imputed Age") +
guides(color=guide_legend(title=''))
log_fit <- glm(survived ~ sex + pclass + age ,family=binomial(link="logit"),data=titanic_imp)
predictions <- titanic_imp %>%
dplyr::select(sex,pclass,age,survived) %>%
mutate(prediction=predict(log_fit,newdata=titanic_imp,type='response')) %>%
mutate(prediction_binary=case_when(prediction >0.5 ~ 1, TRUE ~ 0),
brier_score=abs(prediction-survived))
#summary(fit)
log_confint <- confint(log_fit) %>% tidy()
colnames(log_confint) <- c('Term','LCLM','UCLM')
log_info <- glance(log_fit) %>%
mutate(meanBrierScore=mean(predictions$brier_score,na.rm=T)) %>%
dplyr::select(meanBrierScore,everything())
log_terms <- tidy(log_fit) %>% rename(Coefficient=estimate,Term=term) %>%
# Order by largest coefficient but put intercept term on bottom
arrange(Term=='(Intercept)',desc(Coefficient)) %>%
left_join(log_confint,by='Term') %>%
dplyr::select(Term,Coefficient,LCLM,UCLM,everything())
# An analysis of our model's classification accuracy
confusionMatrix(factor(predictions$prediction_binary), factor(predictions$survived))
ggplot(data=predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = age, y = prediction, color = pclass)) +
geom_point() +
facet_grid(~factor(sex)) +
scale_y_continuous(labels=scales::percent) +
theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Probability of Survival - Logistic Regression') +
xlab('Age') +
ylab('Survival Probability') +
guides(color = guide_legend(title='Passenger Class',reverse=F,override.aes = list(size=2.5)))
ggplot(predictions, aes(prediction))+
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
# prevent right label on axis from being clipped
theme(legend.pos='top',plot.margin=margin(r = 20, unit = "pt")  ) +
scale_fill_manual(values=wes_palette('Moonrise3')) +
scale_x_continuous(labels=scales::percent,
limits=c(0,1),
expand=c(0,0)) + # eliminate left/right margin
scale_y_continuous(expand=c(0,0,0.07,0)) + # 7% margin on top
labs(title="Logistic Regression Probability Distribution") +
xlab('Survival Probability') +
ylab('Count') +
guides(fill = guide_legend(title=''))
# Same graph as prior but faceted on class
ggplot(predictions, aes(prediction))+
geom_histogram(binwidth=0.05,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
facet_wrap(~pclass,scales='free_y') +
theme(legend.pos='top',
# prevent right label on axis from being clipped
plot.margin=margin(r = 20, unit = "pt")
) +
scale_fill_manual(values=wes_palette('Moonrise3')) +
scale_x_continuous(labels=scales::percent, limits=c(0,1),
expand=c(0,0) # eliminate left/right margin
) +
scale_y_continuous(expand=c(0,0,0.07,0)) + # 7% margin on top
labs(title="Logistic Regression Probability Distribution by Passenger Class") +
xlab('Survival Probability') +
ylab('Count') +
guides(fill = guide_legend(title=''))
ggplot(predictions, aes(brier_score)) +
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
labs(title="Brier Score Distribution") +
scale_fill_manual(values=wes_palette('Moonrise3')) +
# Use expand to make sure right axis label isn't clipped
scale_x_continuous(expand=c(0,0,0.01,0),limits=c(0,1)) +
scale_y_continuous(expand=c(0,0,0.07,0)) + # 7% margin on top
xlab('Brier Score') +
ylab('Count') +
guides(fill = guide_legend(title=''))
kable(log_info %>%
dplyr::select(-df.residual,-df.null,-deviance),format='markdown',digits=2) %>%
kable_styling(bootstrap_options = c("striped",'border'))
kable(log_terms,format='markdown',digits = 2) %>%
kable_styling(bootstrap_options = c("striped",'border'))
ggplot(predictions, aes(prediction))+
geom_histogram(binwidth=0.05,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
facet_wrap(~gender,scales='free_y') +
theme(legend.pos='top',
# prevent right label on axis from being clipped
plot.margin=margin(r = 20, unit = "pt")
) +
scale_fill_manual(values=wes_palette('Moonrise3')) +
scale_x_continuous(labels=scales::percent, limits=c(0,1),
expand=c(0,0) # eliminate left/right margin
) +
scale_y_continuous(expand=c(0,0,0.07,0)) + # 7% margin on top
labs(title="Logistic Regression Probability Distribution by Gender") +
xlab('Survival Probability') +
ylab('Count') +
guides(fill = guide_legend(title=''))
ggplot(predictions, aes(prediction))+
geom_histogram(binwidth=0.05,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
facet_wrap(~sex,scales='free_y') +
theme(legend.pos='top',
# prevent right label on axis from being clipped
plot.margin=margin(r = 20, unit = "pt")
) +
scale_fill_manual(values=wes_palette('Moonrise3')) +
scale_x_continuous(labels=scales::percent, limits=c(0,1),
expand=c(0,0) # eliminate left/right margin
) +
scale_y_continuous(expand=c(0,0,0.07,0)) + # 7% margin on top
labs(title="Logistic Regression Probability Distribution by Gender") +
xlab('Survival Probability') +
ylab('Count') +
guides(fill = guide_legend(title=''))
ggplot(predictions, aes(brier_score)) +
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
labs(title="Brier Score Distribution") +
scale_fill_manual(values=wes_palette('Moonrise3')) +
# Use expand to make sure right axis label isn't clipped
scale_x_continuous(expand=c(0,0,0.01,0),limits=c(0,1)) +
#   scale_y_continuous(expand=c(0,0,0.07,0)) + # 7% margin on top
xlab('Brier Score') +
ylab('Count') +
guides(fill = guide_legend(title=''))
ggplot(predictions, aes(brier_score)) +
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
labs(title="Brier Score Distribution") +
scale_fill_manual(values=wes_palette('Moonrise3')) +
# Use expand to make sure right axis label isn't clipped
scale_x_continuous(expand=c(0,0,0.01,0),limits=c(0,1)) +
scale_y_continuous(expand=c(0,0,0.07,0)) + # 7% margin on top
xlab('Brier Score') +
ylab('Count') +
guides(fill = guide_legend(title=''))
ggplot(predictions, aes(brier_score)) +
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
labs(title="Brier Score Distribution") +
scale_fill_manual(values=wes_palette('Moonrise3')) +
# Use expand to make sure right axis label isn't clipped
scale_x_continuous(expand=c(0,0,0.01,0),limits=c(0,1)) +
scale_y_continuous(expand=c(0,0,0.7,0)) + # 7% margin on top
xlab('Brier Score') +
ylab('Count') +
guides(fill = guide_legend(title=''))
ggplot(predictions, aes(brier_score)) +
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
labs(title="Brier Score Distribution") +
scale_fill_manual(values=wes_palette('Moonrise3')) +
# Use expand to make sure right axis label isn't clipped
scale_x_continuous(expand=c(0,0,0.01,0),limits=c(0,1)) +
scale_y_continuous(expand=c(0,0,0.07,0)) + # 7% margin on top
xlab('Brier Score') +
ylab('Count') +
guides(fill = guide_legend(title=''))
ggplot(predictions, aes(brier_score)) +
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
labs(title="Brier Score Distribution") +
scale_fill_manual(values=wes_palette('Moonrise3')) +
# Use expand to make sure right axis label isn't clipped
scale_x_continuous(expand=c(0,0,0.01,0),limits=c(0,1)) +
scale_y_continuous(expand=c(0.7,0,0.07,0)) + # 7% margin on top
xlab('Brier Score') +
ylab('Count') +
guides(fill = guide_legend(title=''))
ggplot(predictions, aes(brier_score)) +
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
labs(title="Brier Score Distribution") +
scale_fill_manual(values=wes_palette('Moonrise3')) +
# Use expand to make sure right axis label isn't clipped
scale_x_continuous(expand=c(0,0,0.01,0),limits=c(0,1)) +
scale_y_continuous(expand=c(0,0,0.2,0)) + # 7% margin on top
xlab('Brier Score') +
ylab('Count') +
guides(fill = guide_legend(title=''))
ggplot(predictions, aes(brier_score)) +
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
labs(title="Brier Score Distribution") +
scale_fill_manual(values=wes_palette('Moonrise3')) +
# Use expand to make sure right axis label isn't clipped
scale_x_continuous(expand=c(0,0,0.01,0),limits=c(0,1)) +
scale_y_continuous(expand=c(0,0,0.8,0)) + # 7% margin on top
xlab('Brier Score') +
ylab('Count') +
guides(fill = guide_legend(title=''))
ggplot(predictions, aes(brier_score)) +
geom_histogram(binwidth=0.02,aes(fill=factor(survived,labels=c('Died','Survived'))),
col='black') +
labs(title="Brier Score Distribution") +
scale_fill_manual(values=wes_palette('Moonrise3')) +
# Use expand to make sure right axis label isn't clipped
scale_x_continuous(expand=c(0,0,0.08,0),limits=c(0,1)) +
scale_y_continuous(expand=c(0,0,0.8,0)) + # 7% margin on top
xlab('Brier Score') +
ylab('Count') +
guides(fill = guide_legend(title=''))
lm_fit <- lm(fare ~ sex + pclass + age + survived,data=titanic_imp)
