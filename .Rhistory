# Histogram of Residuals
ggplot(lm_predictions, aes(residual)) +
geom_histogram(aes(fill=wes_palette('Moonrise3')[2])) +
labs(title="Residual Distribution") +
xlab('Residual') +
ylab('Count')
# Histogram of Residuals
ggplot(lm_predictions, aes(residual)) +
geom_histogram(aes(fill=wes_palette('Moonrise3')[3])) +
labs(title="Residual Distribution") +
xlab('Residual') +
ylab('Count')
# Histogram of Residuals
ggplot(lm_predictions, aes(residual)) +
geom_histogram() +
labs(title="Residual Distribution") +
xlab('Residual') +
ylab('Count')
ggplot(data=lm_predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = prediction, y = residual, color = pclass)) +
geom_point() +
geom_smooth() +
#scale_y_continuous(labels=scales::dollar) +
#theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Residuals vs Predictions') +
xlab('Age') +
ylab('Fare Cost')
ggplot(data=lm_predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = prediction, y = residual, color = pclass)) +
geom_point() +
geom_smooth() +
#scale_y_continuous(labels=scales::dollar) +
#theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Residuals vs Predictions') +
xlab('Prediction') +
ylab('Fare Cost')
ggplot(data=lm_predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = prediction, y = residual, color = pclass)) +
geom_point() +
geom_smooth() +
#scale_y_continuous(labels=scales::dollar) +
#theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Residuals vs Predictions') +
xlab('Prediction') +
ylab('Residual')
ggplot(data=lm_predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = prediction, y = residual, color = pclass)) +
geom_point() +
geom_smooth(group=1) +
#scale_y_continuous(labels=scales::dollar) +
#theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Residuals vs Predictions') +
xlab('Prediction') +
ylab('Residual')
ggplot(data=lm_predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = prediction, y = residual, color = pclass)) +
geom_point() +
geom_smooth(method="lm",show.legend=F,size=0.5) +
#scale_y_continuous(labels=scales::dollar) +
#theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Residuals vs Predictions') +
xlab('Prediction') +
ylab('Residual')
log_info <- glance(log_fit)
log_fit <- glm(survived ~ sex + pclass + age ,family=binomial(link="logit"),data=titanic)
predictions <- titanic %>%
dplyr::select(sex,pclass,age,survived) %>%
mutate(prediction=predict(log_fit,newdata=titanic,type='response')) %>%
mutate(prediction_binary=case_when(prediction >0.5 ~ 1, TRUE ~ 0))
#summary(fit)
log_info <- glance(log_fit)
View(log_info)
log_terms <- tidy(log_fit)
View(log_terms)
help(xterm)
help(xtable)
lm_fit <- lm(fare ~ sex + pclass + age + survived,data=titanic)
lm_predictions <- titanic %>%
dplyr::select(sex,pclass,age,survived,fare) %>%
mutate(prediction=predict(lm_fit,newdata=titanic,type='response')) %>%
mutate(residual=fare-prediction)
lm_info <- glance(lm_fit)
lm_terms <- tidy(lm_fit)
#summary(lm_fit)
# Histogram of Residuals
ggplot(lm_predictions, aes(residual)) +
geom_histogram() +
labs(title="Residual Distribution") +
xlab('Residual') +
ylab('Count')
ggplot(data=lm_predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = age, y = prediction, color = pclass,group=1)) +
geom_point() +
facet_grid(~factor(sex)) +
scale_y_continuous(labels=scales::dollar)
#theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Cost of Fare - Linear Regression') +
xlab('Age') +
ylab('Fare Cost') +
guides(color = guide_legend(title='Passenger Class',reverse=F,override.aes = list(size=2.5)))
ggplot(data=lm_predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = age, y = prediction, color = pclass,group=1)) +
geom_point() +
facet_grid(~factor(sex)) +
scale_y_continuous(labels=scales::dollar) +
#theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Cost of Fare - Linear Regression') +
xlab('Age') +
ylab('Fare Cost') +
guides(color = guide_legend(title='Passenger Class',reverse=F,override.aes = list(size=2.5)))
lm_fit <- lm(fare ~ sex + pclass + age + survived,data=titanic)
lm_predictions <- titanic %>%
dplyr::select(sex,pclass,age,survived,fare) %>%
mutate(prediction=predict(lm_fit,newdata=titanic,type='response')) %>%
mutate(residual=fare-prediction)
lm_info <- glance(lm_fit)
lm_terms <- tidy(lm_fit)
#summary(lm_fit)
# Histogram of Residuals
ggplot(lm_predictions, aes(residual)) +
geom_histogram() +
labs(title="Residual Distribution") +
xlab('Residual') +
ylab('Count')
ggplot(data=lm_predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = age, y = prediction, color = pclass,group=1)) +
geom_point() +
facet_grid(~factor(sex)) +
scale_y_continuous(labels=scales::dollar) +
#theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Cost of Fare - Linear Regression') +
xlab('Age') +
ylab('Fare Cost') +
guides(color = guide_legend(title='Passenger Class',reverse=F,override.aes = list(size=2.5)))
ggplot(data=lm_predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = prediction, y = residual, color = pclass)) +
geom_point() +
geom_smooth(method="lm",show.legend=F,size=0.5) +
#scale_y_continuous(labels=scales::dollar) +
#theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Residuals vs Predictions') +
xlab('Prediction') +
ylab('Residual')
log_fit <- glm(survived ~ sex + pclass + age ,family=binomial(link="logit"),data=titanic)
predictions <- titanic %>%
dplyr::select(sex,pclass,age,survived) %>%
mutate(prediction=predict(log_fit,newdata=titanic,type='response')) %>%
mutate(prediction_binary=case_when(prediction >0.5 ~ 1, TRUE ~ 0))
#summary(fit)
log_info <- glance(log_fit)
log_terms <- tidy(log_fit)
# An analysis of our model's classification accuracy
confusionMatrix(factor(predictions$prediction_binary), factor(predictions$survived))
ggplot(data=predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = age, y = prediction, color = pclass)) +
geom_point() +
facet_grid(~factor(sex)) +
scale_y_continuous(labels=scales::percent) +
theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Probability of Survival - Logistic Regression') +
xlab('Age') +
ylab('Survival Probability') +
guides(color = guide_legend(title='Passenger Class',reverse=F,override.aes = list(size=2.5)))
print(xtable(log_info),type='html')
print(xtable(log_terms),type='html')
lm_fit <- lm(fare ~ sex + pclass + age + survived,data=titanic)
lm_predictions <- titanic %>%
dplyr::select(sex,pclass,age,survived,fare) %>%
mutate(prediction=predict(lm_fit,newdata=titanic,type='response')) %>%
mutate(residual=fare-prediction)
lm_info <- glance(lm_fit)
lm_terms <- tidy(lm_fit)
#summary(lm_fit)
# Histogram of Residuals
ggplot(lm_predictions, aes(residual)) +
geom_histogram() +
labs(title="Residual Distribution") +
xlab('Residual') +
ylab('Count')
ggplot(data=lm_predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = age, y = prediction, color = pclass,group=1)) +
geom_point() +
facet_grid(~factor(sex)) +
scale_y_continuous(labels=scales::dollar) +
#theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Cost of Fare - Linear Regression') +
xlab('Age') +
ylab('Fare Cost') +
guides(color = guide_legend(title='Passenger Class',reverse=F,override.aes = list(size=2.5)))
ggplot(data=lm_predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = prediction, y = residual, color = pclass)) +
geom_point() +
#geom_smooth(method="lm",show.legend=F,size=0.5) +
#scale_y_continuous(labels=scales::dollar) +
#theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Residuals vs Predictions') +
xlab('Prediction') +
ylab('Residual')
predictions <- titanic %>%
dplyr::select(sex,pclass,age,survived) %>%
mutate(prediction=predict(log_fit,newdata=titanic,type='response')) %>%
mutate(prediction_binary=case_when(prediction >0.5 ~ 1, TRUE ~ 0))
ggplot(data=lm_predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = prediction, y = residual, color = pclass)) +
geom_point() +
facet_grid(~pclass) +
#geom_smooth(method="lm",show.legend=F,size=0.5) +
#scale_y_continuous(labels=scales::dollar) +
#theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Residuals vs Predictions') +
xlab('Prediction') +
ylab('Residual') +
guides(color = guide_legend(title='Passenger Class',reverse=F,override.aes = list(size=2.5)))
help(facet_grid)
ggplot(data=lm_predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = prediction, y = residual, color = pclass)) +
geom_point() +
facet_grid(~pclass,scales='free_x',space='free') +
#geom_smooth(method="lm",show.legend=F,size=0.5) +
#scale_y_continuous(labels=scales::dollar) +
#theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Residuals vs Predictions') +
xlab('Prediction') +
ylab('Residual') +
guides(color = guide_legend(title='Passenger Class',reverse=F,override.aes = list(size=2.5)))
ggplot(data=lm_predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = prediction, y = residual, color = pclass)) +
geom_point() +
facet_grid(~pclass,scales='free_x',space='free') +
#geom_smooth(method="lm",show.legend=F,size=0.5) +
scale_x_continuous(labels=scales::dollar) +
#theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Residuals vs Predictions') +
xlab('Prediction') +
ylab('Residual') +
guides(color = guide_legend(title='Passenger Class',reverse=F,override.aes = list(size=2.5)))
ggplot(data=lm_predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = prediction, y = residual, color = pclass)) +
geom_point() +
facet_grid(~pclass,scales='free_x',space='free') +
#geom_smooth(method="lm",show.legend=F,size=0.5) +
scale_x_continuous(labels=scales::dollar) +
scale_y_continuous(labels=scales::dollar) +
#theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Residuals vs Predictions') +
xlab('Prediction') +
ylab('Residual') +
guides(color = guide_legend(title='Passenger Class',reverse=F,override.aes = list(size=2.5)))
predictions <- titanic %>%
dplyr::select(sex,pclass,age,survived) %>%
mutate(prediction=predict(log_fit,newdata=titanic,type='response')) %>%
mutate(prediction_binary=case_when(prediction >0.5 ~ 1, TRUE ~ 0),
brier_score=abs(prediction-survival))
log_fit <- glm(survived ~ sex + pclass + age ,family=binomial(link="logit"),data=titanic)
predictions <- titanic %>%
dplyr::select(sex,pclass,age,survived) %>%
mutate(prediction=predict(log_fit,newdata=titanic,type='response')) %>%
mutate(prediction_binary=case_when(prediction >0.5 ~ 1, TRUE ~ 0),
brier_score=abs(prediction-survival))
predictions <- titanic %>%
dplyr::select(sex,pclass,age,survived) %>%
mutate(prediction=predict(log_fit,newdata=titanic,type='response')) %>%
mutate(prediction_binary=case_when(prediction >0.5 ~ 1, TRUE ~ 0),
brier_score=abs(prediction-survival))
predictions <- titanic %>%
dplyr::select(sex,pclass,age,survived) %>%
mutate(prediction=predict(log_fit,newdata=titanic,type='response')) %>%
mutate(prediction_binary=case_when(prediction >0.5 ~ 1, TRUE ~ 0),
brier_score=abs(prediction-survived))
log_info <- glance(log_fit) %>% mutate(avg_brier_score=mean(predictions$bri))
log_info <- glance(log_fit) %>% mutate(mean_brier_score=mean(predictions$brier_score)) %>%
select(mean_brier_score,everything())
log_fit <- glm(survived ~ sex + pclass + age ,family=binomial(link="logit"),data=titanic)
predictions <- titanic %>%
dplyr::select(sex,pclass,age,survived) %>%
mutate(prediction=predict(log_fit,newdata=titanic,type='response')) %>%
mutate(prediction_binary=case_when(prediction >0.5 ~ 1, TRUE ~ 0),
brier_score=abs(prediction-survived))
#summary(fit)
log_info <- glance(log_fit) %>% mutate(mean_brier_score=mean(predictions$brier_score)) %>%
select(mean_brier_score,everything())
log_info <- glance(log_fit) %>%
mutate(mean_brier_score=mean(predictions$brier_score))
log_info <- glance(log_fit) %>%
mutate(mean_brier_score=mean(predictions$brier_score)) %> as_tibble() %>%
log_info <- glance(log_fit) %>%
mutate(mean_brier_score=mean(predictions$brier_score)) %>% as_tibble() %>%
select(mean_brier_score,everything())
help(select)
help(select helpers)
log_info <- glance(log_fit) %>%
mutate(mean_brier_score=mean(predictions$brier_score)) %>%
dplyr::select(mean_brier_score,everything())
View(log_info)
mean(predictions$brier_score)
predictions <- titanic %>%
dplyr::select(sex,pclass,age,survived) %>%
mutate(prediction=predict(log_fit,newdata=titanic,type='response')) %>%
mutate(prediction_binary=case_when(prediction >0.5 ~ 1, TRUE ~ 0),
brier_score=abs(prediction-survived))
View(predictions)
mean(predictions$brier_score)
mean(predictions$brier_score %>% drop_na())
mean(predictions$brier_score,drop.na=T)
help(mean)
mean(predictions$brier_score,na.rm=T)
log_info <- glance(log_fit) %>%
mutate(mean_brier_score=mean(predictions$brier_score,na.rm=T)) %>%
dplyr::select(mean_brier_score,everything())
log_fit <- glm(survived ~ sex + pclass + age ,family=binomial(link="logit"),data=titanic)
predictions <- titanic %>%
dplyr::select(sex,pclass,age,survived) %>%
mutate(prediction=predict(log_fit,newdata=titanic,type='response')) %>%
mutate(prediction_binary=case_when(prediction >0.5 ~ 1, TRUE ~ 0),
brier_score=abs(prediction-survived))
#summary(fit)
log_info <- glance(log_fit) %>%
mutate(mean_brier_score=mean(predictions$brier_score,na.rm=T)) %>%
dplyr::select(mean_brier_score,everything())
log_terms <- tidy(log_fit)
# An analysis of our model's classification accuracy
confusionMatrix(factor(predictions$prediction_binary), factor(predictions$survived))
ggplot(data=predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = age, y = prediction, color = pclass)) +
geom_point() +
facet_grid(~factor(sex)) +
scale_y_continuous(labels=scales::percent) +
theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Probability of Survival - Logistic Regression') +
xlab('Age') +
ylab('Survival Probability') +
guides(color = guide_legend(title='Passenger Class',reverse=F,override.aes = list(size=2.5)))
log_info <- glance(log_fit) %>%
mutate(meanBrierScore=mean(predictions$brier_score,na.rm=T)) %>%
dplyr::select(meanBrierScore,everything())
# Histogram of Residuals
ggplot(predictions, aes(brier_score)) +
geom_histogram() +
labs(title="Brier Score Distribution") +
xlab('Brier Score') +
ylab('Count')
print(xtable(lm_info),type='html')
print(xtable(lm_terms),type='html')
help(xtable)
T
print(xtable(lm_info,auto=T),type='html')
ggplot(predictions, aes(prediction)) +
geom_histogram() +
labs(title="Logistic Regression Probability Distribution") +
xlab('Survival Probability') +
ylab('Count')
ggplot(predictions, aes(prediction)) +
geom_histogram() +
scale_x_continuous(labels=scales::percent) +
labs(title="Logistic Regression Probability Distribution") +
xlab('Survival Probability') +
ylab('Count')
log_fit <- glm(survived ~ sex + pclass + age ,family=binomial(link="logit"),data=titanic)
predictions <- titanic %>%
dplyr::select(sex,pclass,age,survived) %>%
mutate(prediction=predict(log_fit,newdata=titanic,type='response')) %>%
mutate(prediction_binary=case_when(prediction >0.5 ~ 1, TRUE ~ 0),
brier_score=abs(prediction-survived))
#summary(fit)
log_info <- glance(log_fit) %>%
mutate(meanBrierScore=mean(predictions$brier_score,na.rm=T)) %>%
dplyr::select(meanBrierScore,everything())
log_terms <- tidy(log_fit)
# An analysis of our model's classification accuracy
confusionMatrix(factor(predictions$prediction_binary), factor(predictions$survived))
ggplot(data=predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = age, y = prediction, color = pclass)) +
geom_point() +
facet_grid(~factor(sex)) +
scale_y_continuous(labels=scales::percent) +
theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Probability of Survival - Logistic Regression') +
xlab('Age') +
ylab('Survival Probability') +
guides(color = guide_legend(title='Passenger Class',reverse=F,override.aes = list(size=2.5)))
ggplot(predictions, aes(prediction)) +
geom_histogram() +
scale_x_continuous(labels=scales::percent) +
labs(title="Logistic Regression Probability Distribution") +
xlab('Survival Probability') +
ylab('Count')
ggplot(predictions, aes(brier_score)) +
geom_histogram() +
labs(title="Brier Score Distribution") +
xlab('Brier Score') +
ylab('Count')
print(xtable(lm_info),type='html')
print(xtable(lm_terms),type='html')
lm_fit <- lm(fare ~ sex + pclass + age + survived,data=titanic)
lm_predictions <- titanic %>%
dplyr::select(sex,pclass,age,survived,fare) %>%
mutate(prediction=predict(lm_fit,newdata=titanic,type='response')) %>%
mutate(residual=fare-prediction)
lm_info <- glance(lm_fit)
lm_terms <- tidy(lm_fit)
#summary(lm_fit)
# Histogram of Residuals
ggplot(lm_predictions, aes(residual)) +
geom_histogram() +
labs(title="Residual Distribution") +
xlab('Residual') +
ylab('Count')
ggplot(data=lm_predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = age, y = prediction, color = pclass,group=1)) +
geom_point() +
facet_grid(~factor(sex)) +
scale_y_continuous(labels=scales::dollar) +
#theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Cost of Fare - Linear Regression') +
xlab('Age') +
ylab('Fare Cost') +
guides(color = guide_legend(title='Passenger Class',reverse=F,override.aes = list(size=2.5)))
ggplot(data=lm_predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = prediction, y = residual, color = pclass)) +
geom_point() +
facet_grid(~pclass,scales='free_x',space='free') +
#geom_smooth(method="lm",show.legend=F,size=0.5) +
scale_x_continuous(labels=scales::dollar) +
scale_y_continuous(labels=scales::dollar) +
#theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Residuals vs Predictions') +
xlab('Prediction') +
ylab('Residual') +
guides(color = guide_legend(title='Passenger Class',reverse=F,override.aes = list(size=2.5)))
ggplot(data=lm_predictions %>% mutate(sex=capitalize(as.character(sex))),
aes(x = prediction, y = residual, color = pclass)) +
geom_point() +
facet_grid(~pclass,scales='free_x') +
#geom_smooth(method="lm",show.legend=F,size=0.5) +
scale_x_continuous(labels=scales::dollar) +
scale_y_continuous(labels=scales::dollar) +
#theme(legend.margin=margin(0,0,0,0)) +
scale_color_manual(values=wes_palette('Moonrise3')) +
labs(title='Residuals vs Predictions') +
xlab('Prediction') +
ylab('Residual') +
guides(color = guide_legend(title='Passenger Class',reverse=F,override.aes = list(size=2.5)))
View(lm_predictions)
# Load libraries - you will need to install these with install.packages('packagename')
# if you do not have them installed
library(tidyverse)
library(ggrepel) # loads ggplot2 as well
library(treemapify) # ggplot treemap
#library(knitr)
library(treemap)
library(formattable) # percent format
library(wesanderson) # Color Palettes from Wes Anderson Movies
library(waffle) # waffle charts, make sure to install the github version with devtools::install_github("hrbrmstr/waffle")
library(lubridate) # time/date related functions
# Color blind friendly palette from http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2",
"#D55E00", "#CC79A7")
film_chron_order = c("The Phantom Menace", "Attack of the Clones", "Revenge of the Sith",
"A New Hope","The Empire Strikes Back", "Return of the Jedi","The Force Awakens")
# Set default ggplot theme
theme_set(theme_bw()+
theme(legend.position = "top",
plot.subtitle= element_text(face="bold",hjust=0.5),
plot.title = element_text(lineheight=1, face="bold",hjust = 0.5)))
data(Titanic)
titanic <- Titanic %>% as_tibble()
titanic_bar <- titanic %>%
# add a percent for Class
group_by(Sex,Survived,Class) %>%
summarize(n=sum(n)) %>%
group_by(Sex,Survived) %>%
mutate(percent_num=n/sum(n),percent_char=as.character(percent(n/sum(n),0)))
titanic_bar <- titanic %>%
# add a percent for Class
group_by(Sex,Survived,Class) %>%
summarize(n=sum(n)) %>%
group_by(Sex,Survived) %>%
mutate(percent_num=n/sum(n),percent_char=as.character(percent(n/sum(n),0)))
data(Titanic)
titanic <- Titanic %>% as_tibble()
titanic_bar <- titanic %>%
# add a percent for Class
group_by(Sex,Survived,Class) %>%
summarize(n=sum(n)) %>%
group_by(Sex,Survived) %>%
mutate(percent_num=n/sum(n),percent_char=as.character(percent(n/sum(n),0)))
titanic_bar <- titanic %>%
# add a percent for Class
dplyr::group_by(Sex,Survived,Class) %>%
summarize(n=sum(n)) %>%
dplyr::group_by(Sex,Survived) %>%
mutate(percent_num=n/sum(n),percent_char=as.character(percent(n/sum(n),0)))
